package hr.fer.zemris.ooup.lab3.textEditor;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;

import javax.swing.JPanel;

public class TextEditorView extends JPanel {

	/**
	 * Autogenerated serial UID.
	 */
	private static final long serialVersionUID = 3150351791293390460L;
	private TextEditorModel textEditorModel;

	private String name = "Serif";
	private int style = Font.PLAIN;
	private int size = 20;

	public TextEditorView(TextEditorModel textEditorModel, ClipboardStack clipboard) {
		this.setFocusable(true);
		this.requestFocusInWindow();

		this.textEditorModel = textEditorModel;
		this.textEditorModel.subscribeCursorObserver((loc) -> {
			revalidate();
			repaint();
		});
		this.textEditorModel.subscribeTextObserver(() -> {
			revalidate();
			repaint();
		});
		clipboard.subscribeClipboardObserver(()->{
			revalidate();
			repaint();
		});
	}

	@Override
	protected void paintComponent(Graphics g) {
		this.requestFocusInWindow();
		super.paintComponent(g);

		g.setFont(new Font(this.name, this.style, this.size));
		// draw selected

		int prevRow = 0;
		String prevString = "";

		for (TextRecord record : textEditorModel.extendedLines()) {

			//System.out.println(record.text()+" "+record.isSelected()+" "+record.getRow());
			if (record.isSelected()) {
				g.setColor(Color.RED);
				if (record.getRow() == prevRow) {
					g.drawRect(g.getFontMetrics().stringWidth(prevString), record.getRow() * size , g.getFontMetrics().stringWidth(record.text()), g.getFont().getSize());
					
					g.drawString(record.text(), g.getFontMetrics().stringWidth(prevString),
							record.getRow() * size + size);
					prevRow = record.getRow();
					prevString += record.text();

				} else {
					g.drawRect(0, record.getRow() * size , g.getFontMetrics().stringWidth(record.text()), g.getFont().getSize());
					g.drawString(record.text(), 0,
							record.getRow() * size + size);
					prevRow = record.getRow();
					prevString = record.text();

				}
				g.setColor(Color.BLACK);

			} else {

				if (record.getRow() == prevRow) {
					g.drawString(record.text(), g.getFontMetrics().stringWidth(prevString),
							record.getRow() * size + size);
					prevRow = record.getRow();
					prevString += record.text();

				} else {
					g.drawString(record.text(),0,
							record.getRow() * size + size);
					prevRow = record.getRow();
					prevString = record.text();

				}
			}

		}
		// add cursor
		int cursorX = textEditorModel.cursorStartInPixelsX(g.getFontMetrics());
		int cursorY = textEditorModel.cursorStartInPixelsY(g.getFontMetrics());
		
		g.drawLine(cursorX, cursorY, cursorX, cursorY + size);
	}
}
